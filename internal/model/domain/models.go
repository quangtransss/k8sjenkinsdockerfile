// Code generated by sqlc. DO NOT EDIT.

package domain

import (
	"database/sql"
	"fmt"
	"time"
)

type Status string

const (
	StatusActive  Status = "active"
	StatusDisable Status = "disable"
)

func (e *Status) Scan(src interface{}) error {
	switch s := src.(type) {
	case []byte:
		*e = Status(s)
	case string:
		*e = Status(s)
	default:
		return fmt.Errorf("unsupported scan type for Status: %T", src)
	}
	return nil
}

type Category struct {
	ID           int64  `json:"id"`
	NameCategory string `json:"name_category"`
}

type Order struct {
	ID         int64     `json:"id"`
	Customerid int64     `json:"customerid"`
	CreatedAt  time.Time `json:"created_at"`
}

type OrderDetail struct {
	ID        int64     `json:"id"`
	OrderID   int64     `json:"order_id"`
	ProductID int64     `json:"product_id"`
	Active    Status    `json:"active"`
	Total     int64     `json:"total"`
	CreatedAt time.Time `json:"created_at"`
}

type Permission struct {
	ID        int64          `json:"id"`
	Title     sql.NullString `json:"title"`
	Content   sql.NullString `json:"content"`
	Active    Status         `json:"active"`
	CreatedAt time.Time      `json:"created_at"`
}

type Product struct {
	ID          int64     `json:"id"`
	NameProduct string    `json:"name_product"`
	Price       int64     `json:"price"`
	CreatedAt   time.Time `json:"created_at"`
}

type ProductCategory struct {
	CategoryID int64     `json:"category_id"`
	ProductID  int64     `json:"product_id"`
	CreatedAt  time.Time `json:"created_at"`
}

type Role struct {
	ID                int64          `json:"id"`
	Title             string         `json:"title"`
	Slug              string         `json:"slug"`
	Active            Status         `json:"active"`
	Description       sql.NullString `json:"description"`
	CreatedAt         time.Time      `json:"created_at"`
	PasswordChangedAt time.Time      `json:"password_changed_at"`
}

type RolePermisstion struct {
	Roleid       int64     `json:"roleid"`
	Permissionid int64     `json:"permissionid"`
	CreatedAt    time.Time `json:"created_at"`
}

type User struct {
	ID               int64     `json:"id"`
	FullName         string    `json:"full_name"`
	CreatedAt        time.Time `json:"created_at"`
	Username         string    `json:"username"`
	HashedPassword   string    `json:"hashed_password"`
	Email            string    `json:"email"`
	Mobile           int64     `json:"mobile"`
	Roleid           int64     `json:"roleid"`
	PasswordChangeAt time.Time `json:"password_change_at"`
}
